<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="bookMapper">
 
	<resultMap type="com.kh.library.book.vo.BookCategoryVO" id="bookCate">
		<id column="CATE_CODE" 		property="cateCode"/>
		<result column="CATE_NAME" 	property="cateName"/>
	</resultMap>
	
	<resultMap type="com.kh.library.book.vo.BookVO" id="book">
      <id column="BOOK_CODE"                	property="bookCode"/>
      <result column="TITLE"             		property="title"/>
      <result column="WRITER"          		  	property="writer"/>
      <result column="ISBN"          		  	property="isbn"/>
      <result column="KEYWORD"        		 	property="keyword"/>
      <result column="BK_CONTENT"        		property="bkContent"/>
      <result column="BK_PAGE"        			property="bkPage"/>
      <result column="BK_SIZE"        			property="bkSize"/>
      <result column="PUBLISHER"            	property="publisher"/>
      <result column="INPUT_DATE"          		property="inputDate"/>
      <result column="BK_STOCK"          		property="bkStock"/>
      <result column="AREA"          			property="area"/>
      <result column="BK_IMG"         			property="bkImg"/>
      <result column="RSV_CNT"             		property="rsvCnt"/>
      <result column="RCD_CNT"             		property="rcdCnt"/>
      <result column="STATUS"             		property="status"/>
      <result column="PUB_DATE"             	property="pubDate"/>
      <result column="CATE_CODE"             	property="cateCode"/>
      <result column="CATE_NAME"             	property="cateName"/>
      <result column="SEARCH_SUB"         		property="searchSub"/>
      <result column="SEARCH_TXT"         		property="searchTxt"/>
      <result column="MEM_ID"					property="memId"/>
   </resultMap>
   
   <resultMap type="com.kh.library.book.vo.BookVO" id="dBook">
      <id column="BOOK_CODE"                	property="bookCode"/>
      <result column="TITLE"             		property="title"/>
      <result column="WRITER"          		  	property="bookWriter"/>
      <result column="KEYWORD"        		 	property="keyword"/>
      <result column="PUBLISHER"            	property="publisher"/>
      <result column="CATE_CODE"             	property="cateCode"/>
      <result column="INPUT_DATE"          		property="inputDate"/>
      <result column="BOOK_STOCK"          		property="bookStock"/>
      <result column="RESERVE_CNT"         		property="reserveCnt"/>
      <result column="STATUS"             		property="status"/>
      <result column="PUB_DATE"             	property="pubDate"/>
      <result column="BOOK_AT_IMG_CODE"         property="bookAtImgCode"/>
   </resultMap>
   
   <resultMap type="com.kh.library.book.vo.BookVO" id="searchBook">
   		<id column="SEARCH_CODE" 				property="searchCode"/>
   		<result column="SEARCH_SUB" 				property="searchSub"/>
   		<result column="SEARCH_TXT" 			property="searchTxt"/>
   </resultMap>
   
	<resultMap type="com.kh.library.book.vo.BookImgVO" id="bookImg">
		<id column="BK_IMG_CODE" 				property="bkImgCode"/>
		<result column="BK_ORIGIN_NAME" 		property="bkOriginName"/>
		<result column="BK_AT_NAME" 			property="bkAtName"/>
		<result column="BOOK_CODE" 				property="bookCode"/>
	</resultMap>
	
	<resultMap type="com.kh.library.book.vo.ReserveVO" id="reserve">
		<id column="RESERVE_CODE" 				property="reserveCode"/>
		<result column="APPLI_DATE" 			property="appliDate"/>
		<result column="IS_RESERVE" 			property="isReserve"/>
		<result column="RESERVE_DATE" 			property="reserveDate"/>
		<result column="RETURN_DATE" 			property="returnDate"/>
		<result column="BOOK_CODE" 				property="bookCode"/>
		<result column="MEM_ID" 				property="memId"/>
	</resultMap>
	
	<resultMap type="com.kh.library.book.vo.HopeBookVO" id="hopeBook">
		<id column="HOPE_CODE"				property="hopeCode"/>
		<result column="HOPE_NAME"  		property="hopeName"/>
		<result column="HOPE_WRITER"  		property="hopeWriter"/>
		<result column="HOPE_PUBLISHER"  	property="hopePublisher"/>
		<result column="MEM_ID"  			property="memId"/>
	</resultMap>
	
	<resultMap type="com.kh.library.book.vo.RecommendVO" id="recommend">
		<id column="RC_CODE"				property="rcCode"/>
		<result column="RC_NAME"			property="rcName"/>
		<result column="RC_CONTENT"			property="rcName"/>
	</resultMap>
	
	<resultMap type="com.kh.library.book.vo.RecommendImgVO" id="recommendImg">
		<id column="RC_IMG_CODE"				property="rcImgCode"/>
		<result column="RC_ORIGIN_NAME"			property="rcOriginName"/>
		<result column="RC_AT_IMG_NAME"			property="rcAtImgName"/>
		<result column="RC_CODE"			property="rcCode"/>
		
	</resultMap>
	
	<!-- 카테고리 조회 -->
	<select id="selectBookCategory" resultMap="bookCate">
	SELECT CATE_CODE
		, CATE_NAME
	FROM BOOK_CATEGORY
	</select>
	
	<!-- 카테고리 등록 굳이 왜 ? -->
	
	<insert id="insertBookCategory">
	INSERT INTO BOOK_CATEGORY(
		CATE_CODE
		, CATE_NAME
	)VALUES(
		#{cateCode}
		,#{cateName}
	)
	</insert>
	
	<!-- 책 등록 -->
	<insert id="insertBook">
		INSERT INTO BOOK (
			BOOK_CODE
			, TITLE
			, WRITER
			, ISBN
			, KEYWORD
			, BK_CONTENT
			, BK_PAGE
			, BK_SIZE
			, PUBLISHER
			, BK_STOCK
			, AREA
			, BK_IMG
			, PUB_DATE
			, CATE_CODE
		) VALUES (
			#{bookCode}
			, #{title}
			, #{writer}
			, #{isbn}
			, #{keyword}
			, #{bkContent}
			, #{bkPage}
			, #{bkSize}
			, #{publisher}
			, #{bkStock}
			, #{area}
			, #{bkImg}
			, #{pubDate}
			, #{cateCode}
		)	
	</insert>
	
	<!-- 표지 첨부 -->
	<insert id="insertBookImg">
		INSERT INTO BOOK_IMAGE (
			BK_IMG_CODE
			, BK_ORIGIN_NAME
			, BK_AT_NAME
			, BOOK_CODE
		) VALUES (
			 #{bkImgCode}
			,#{bkOriginName}
			,#{bkAtName}
			,#{bookCode}
		)		
	</insert>
	
	<!-- 이미지 코드 숫자 -->
	<select id="selectNextImgCode" resultType="int">
		SELECT NVL(MAX(BK_IMG_CODE),0)+1
		FROM BOOK_IMAGE
	</select>
	
	<!-- 책 코드 -->
	<select id="selectNextBookCode" resultType="String">
		SELECT 'BOOK_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOOK_CODE, 6))), 0) + 1,3,'0')
		FROM BOOK
	</select> 
	
	
	<!-- 검색어 저장 -->
	<insert id="insertSearch">
		INSERT INTO SEARCH_BOOK(
			SEARCH_CODE
			, SEARCH_SUB 
			, SEARCH_TXT
		) VALUES(
			(SELECT 'SEARCH'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(SEARCH_CODE,7,3))),0)+1,3,'0') AS SEARCH_CODE FROM SEARCH_BOOK)
			, #{searchSub}
			, #{searchTxt}
		)
	</insert>
	
	<!-- 검색 키워드 조회 -->
	<select id="selectSearchList" resultMap="book" >
		SELECT B.BOOK_CODE
			, TITLE
			, WRITER
			, ISBN
			, KEYWORD
			, BK_CONTENT
			, AREA
			, STATUS
			, C.CATE_CODE
			, CATE_NAME
			, BK_IMG
		FROM BOOK B, BOOK_CATEGORY C, BOOK_IMAGE I
		WHERE (B.CATE_CODE = C.CATE_CODE
		AND B.BOOK_CODE = I.BOOK_CODE)
        AND ${searchSub} LIKE '%'||#{searchTxt}||'%' 
	</select>

	<!-- 전체 책 조회 -->
	<select id="selectBookList" resultMap="book">
		SELECT B.BOOK_CODE
				, TITLE
				, WRITER
				, ISBN
				, BK_CONTENT
				, PUBLISHER
				, AREA
				, BK_IMG
				, STATUS
				, PUB_DATE
				, C.CATE_CODE
		FROM BOOK B, BOOK_CATEGORY C, BOOK_IMAGE I
		WHERE B.CATE_CODE = C.CATE_CODE
		AND B.BOOK_CODE = I.BOOK_CODE
		ORDER BY TITLE DESC
	</select>
	
	<!-- 도서 상세 보기 -->
	<select id="selectBookDetail" resultMap="book">
		SELECT B.BOOK_CODE
			, TITLE
			, WRITER
			, ISBN
			, KEYWORD
			, BK_CONTENT
			, BK_PAGE
			, BK_SIZE
			, PUBLISHER
			, TO_CHAR(INPUT_DATE, 'YYYY-MM-DD')			
			, BK_STOCK
			, AREA
			, BK_IMG
			, RCD_CNT
			, STATUS
			, PUB_DATE
			, C.CATE_CODE
			, CATE_NAME
		FROM BOOK B, BOOK_CATEGORY C , BOOK_IMAGE I 
		WHERE B.CATE_CODE = C.CATE_CODE
		AND B.BOOK_CODE = I.BOOK_CODE
		AND B.BOOK_CODE = #{bookCode}
	</select>
	
	<!-- 책 추천  -->
	<update id="updateRcdCnt" >
		UPDATE BOOK
		SET RCD_CNT = RCD_CNT+1
		WHERE BOOK_CODE = #{bookCode}
	</update>
	
	<!-- 추천도서 랭킹 -->
	<select id="selectRcdBook" resultMap="book">
		SELECT BOOK_CODE
		    , TITLE
		    , BK_IMG
		    , RCD_CNT
		FROM (
		        SELECT BOOK_CODE
		            , TITLE
		            , BK_IMG
		            , RCD_CNT
		            , DENSE_RANK() OVER(ORDER BY RCD_CNT DESC) AS MRCD
		        FROM BOOK
		    )
		WHERE MRCD &lt; 3
		
		
	</select>
	<!-- 책 대여 -->
	<insert id="insertReserve">
		MERGE INTO RESERVE
		USING DUAL
		ON ( BOOK_CODE = #{bookCode} AND MEM_ID = #{memId})
		WHEN NOT MATCHED THEN
		    INSERT ( 
		        RESERVE_CODE
		        , BOOK_CODE
		        , MEM_ID
		    ) VALUES (
		        #{reserveCode}
		        , #{bookCode}
		        , #{memId}
		INSERT INTO RESERVE (
		    RESERVE_CODE
		    , APPLI_DATE
		    , IS_RESERVE
		    , BOOK_CODE
		    , MEM_ID
		    , RESERVE_DATE
		    , RETURN_DATE
		) VALUES (
		
		)
	</insert>
	
	<!-- 희망도서 신청 -->
	<insert id="insertHopeBook">
		INSERT INTO BOOK_HOPE(
			HOPE_CODE
			, HOPE_NAME
			, HOPE_WRITER
			, HOPE_PUBLISHER
			, MEM_ID
		) VALUES (
			(SELECT 'HP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(HOPE_CODE,4))),0)+1,3,0) AS NT_CODE FROM BOOK_HOPE)
			, #{hopeName}
			, #{hopeWriter}
			, #{hopePublisher}
			, #{memId}
		)
	</insert>

	
<!-- 	
	<select id="selectNextHopeCode" resultType="String">
		SELECT 'HOPE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(HOPE_CODE, 5))), 0) + 1, 3, '0')
		FROM BOOK
	</select> -->
	
	
	<!-- 추천도서 등록 -->
</mapper>


































