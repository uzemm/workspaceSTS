<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="memberMapper">
	<resultMap type="com.kh.library.member.vo.MemberVO" id="member">
		<id column="MEM_ID" 				property="memId"/>
		<result column="MEM_PWD" 			property="memPwd"/>
		<result column="MEM_NAME" 			property="memName"/>
		<result column="MEM_ADDR" 			property="memAddr"/>
		<result column="MEM_TELL" 			property="memTell"/>
		<result column="MEM_EMAIL" 			property="memEmail"/>
		<result column="MEM_IMAGE" 			property="memImage"/>
		<result column="MEM_GENDER"			property="memGender"/>
		<result column="MEM_BIRTH" 			property="memBirth"/>
		<result column="IS_DELETE" 			property="isDelete"/>
		<result column="IS_ADMIN" 			property="isAdmin"/>
		<result column="CLUB_ADMIN" 		property="clubAdmin"/>
		<result column="CLUB_CODE" 			property="clubCode"/>
		<result column="CLUB_APPLY_CODE" 	property="clubApplyCode"/>
	</resultMap>
	<resultMap type="com.kh.library.member.vo.MemberImageVO" id="memberImage">
		<id column="MEM_IMG_CODE" 			property="memImgCode"/>
		<result column="MEM_ORIGIN_NAME" 	property="memOriginName"/>
		<result column="MEM_AT_IMG_NAME" 	property="memAtImgName"/>
		<result column="MEM_ID" 			property="memId"/>
	</resultMap>
	<resultMap type="com.kh.library.member.vo.BookComplitVO" id="complit">
		<id column="COMPLIT_CODE" 		property="complitCode"/>
		<result column="COMPLIT_DATE" 	property="complitDate"/>
		<result column="BOOK_CODE" 		property="bookCode"/>
		<result column="MEM_ID" 		property="memId"/>
	<!-- 	<association property="title" resultMap="bookMapper.book" />
		<association property="writer"  resultMap="bookMapper.book"/> -->
	</resultMap>
	
	<!--/////////////////////회원가입//////////////////// -->
	<!-- ID 중복체크 -->
	<select id="checkId" resultType="int">
		SELECT COUNT(MEM_ID)
		FROM BOOK_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 프로필 사진 MEM_IMG_CODE 생성 -->
	<select id="selectNextMemImgCode" resultType="int">
		SELECT NVL(MAX(MEM_IMG_CODE), 0) + 1
		FROM MEMBER_IMAGE
	</select>
	
	<!-- 프로필 사진 이미지 등록 -->
	<insert id="insertMemberImage">
		INSERT INTO MEMBER_IMAGE (
			MEM_IMG_CODE
			, MEM_ORIGIN_NAME
			, MEM_AT_IMG_NAME
			, MEM_ID
		) VALUES (
			#{memImgCode}
			, #{memOriginName}
			, #{memAtImgName}
			, #{memId}
		)
			 
	</insert>
	
	<!-- 회원가입 -->
	<insert id="join">
		INSERT INTO BOOK_MEMBER
		    (MEM_ID
		    , MEM_PWD
		    , MEM_NAME
		    , MEM_BIRTH
		    , MEM_GENDER
		    , MEM_EMAIL
		    , MEM_IMAGE
		    , MEM_ADDR
		    , MEM_TELL
		    ) VALUES (
	    	#{memId}
	    	, #{memPwd}
	    	, #{memName}
	    	, #{memBirth}
	    	, #{memGender}
	    	, #{memEmail}
	    	, #{memImage}
	    	, #{memAddr}
	    	, #{memTell}
	   		 )
	</insert>
	
	<!-- 로그인 -->
	<select id="login" resultMap="member">
		SELECT MEM_ID
			, MEM_PWD
			, MEM_NAME
			, MEM_GENDER
			, MEM_IMAGE
			, CLUB_CODE
			, CLUB_ADMIN
			, IS_ADMIN
		FROM BOOK_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="findId" resultType="String">
		SELECT RPAD((SUBSTR(MEM_ID, 1, 2)), LENGTH(MEM_ID),'*')
    	FROM BOOK_MEMBER
		WHERE MEM_NAME = #{memName}
		AND MEM_EMAIL = #{memEmail}
	</select>
	
	<!-- 비밀번호찾기 : 임시 비번 발송 위한 이메일 조회 -->
	<select id="selectEmail" resultType="String">
		SELECT MEM_EMAIL
		FROM BOOK_MEMBER
		WHERE MEM_ID = #{memId}
		AND MEM_NAME = #{memName}
	</select>
	
	<!-- 임시 비밀번호 -->
	<update id="updateTempPwd">
		UPDATE BOOK_MEMBER
		SET MEM_PWD = #{memPwd}
		WHERE MEM_ID = #{memId}
	</update>
	
	<!-- 마이페이지 -->
	<!-- 내 정보 상세조회 -->
	<select id="selectMyPageDetail" resultMap="member">
		SELECT MEM_ID
		    , MEM_PWD
		    , MEM_NAME
		    , MEM_ADDR
		    , MEM_TELL
		    , MEM_EMAIL
		    , MEM_IMAGE
		    , MEM_GENDER
		    , MEM_BIRTH
		    , CLUB_ADMIN
		    , CLUB_CODE
		    , CLUB_APPLY_CODE
		FROM BOOK_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
	
	
	<!-- 내 정보 수정 -->
	<update id="updateBasicInfo">
		UPDATE BOOK_MEMBER
		SET MEM_NAME = #{memName}
			, MEM_TELL = #{memTell}
			, MEM_EMAIL = #{memEmail}
			, MEM_IMAGE = #{memImage}
		WHERE MEM_ID = #{memId}
	</update>
	<!-- 프로필 이미지 수정 -->
	<update id="updateMemImage">
		UPDATE MEMBER_IMAGE
		SET MEM_ORIGIN_NAME = #{memOriginName}
		    , MEM_AT_IMG_NAME = #{memAtImgName}
		WHERE MEM_ID = #{memId}
	</update>
	<!-- 파일명 조회 : 프로필 이미지 수정 안 할 때 (기존 이미지로 채움) -->
	<select id="selectMemAtImgName" resultType="String">
		SELECT MEM_AT_IMG_NAME
		FROM MEMBER_IMAGE
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 독서플래너 조회 -->
	<select id="selectBookPlaner" resultMap="complit">
		SELECT C.BOOK_CODE
			, (SELECT TITLE FROM BOOK B WHERE B.BOOK_CODE = C.BOOK_CODE) AS TITLE
		FROM BOOK_COMPLIT C
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 독서플래너 - 책 검색하기 -->
	<select id="selectBookPlanerSearch" resultMap="bookMapper.book">
		SELECT BOOK_CODE
			, TITLE
			, WRITER
			, BK_IMG
		FROM BOOK
		WHERE 1=1
		<if test="title != null and !title.equals('')">
			AND UPPER(TITLE) LIKE UPPER('%'||#{title}||'%')
		</if>
    	<if test="writer != null and !writer.equals('')">
    		AND UPPER(WRITER) LIKE UPPER('%'||#{writer}||'%')
    	</if>
	</select>
	
	<!-- 완독도서 독서플래너 등록 -->
	<insert id="insertBookPlaner">
		INSERT INTO BOOK_COMPLIT (
			COMPLIT_CODE
			, BOOK_CODE
			, MEM_ID
		) VALUES (
			(SELECT 'COMPLIT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(COMPLIT_CODE, 9, 4))), 0) + 1, 3 ,'0') FROM BOOK_COMPLIT
			), (SELECT BOOK_CODE 
	                FROM BOOK
	                WHERE TITLE = #{title}
	                AND WRITER = #{writer}
	        ), #{memId}
		)
	</insert>

	<!-- 독서플래너 - 도서 리뷰 자동 등록 -->
	<insert id="insertBookPlanerReview"  >
		INSERT INTO BOOK_COMMENT (
			REVIEW_CODE
			, REVIEW_CONTENT
			, BOOK_CODE
			, MEM_ID
		) VALUES (
			(SELECT 'REVIEW_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(REVIEW_CODE, 8, 4))), 0) + 1, 3 ,'0') FROM BOOK_COMMENT
			), #{reviewContent}
			, (SELECT BOOK_CODE 
	                FROM BOOK
	                WHERE TITLE = #{title}
	                AND WRITER = #{writer}
	        ), #{memId}
		)
	</insert>
	
	<!-- 북클럽 조회 -->
	<select id="selectMyBookClub" resultMap="clubMapper.club">
		SELECT CLUB_CODE, CLUB_NAME
		FROM BOOK_CLUB
		WHERE CLUB_CODE = 
			(SELECT CLUB_CODE 
			FROM BOOK_MEMBER 
			WHERE MEM_ID = #{memId})
	</select>
</mapper>























