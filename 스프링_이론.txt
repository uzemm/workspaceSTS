//---------프로젝트 생성 직후 해야할 일!!!-------//
1. 프로젝트 생성
2. 스프링 및 자바 버전 세팅
 - pom.xml 파일 수정 : 12번째 줄 5.0.7. / 141,142번째 줄 1.8로 변경
 - 프로젝트 설정에서 project facets / 자바1.8 변경 및 웹 모듈 3.1로 변경
3. web.xml에 시작페이지 설정 및 인코딩 / 대문자로 변경
* 스프링 프로젝트는 최초 한번 실행 후 반드시 톰캣의 경로를 '/'로 설정해준다!
   설정을 할 때는 반드시 서버를 종료 시킨 후 설정한다.

//---------스프링에서 객체를 생성하는 법!!!-------//
스프링은 결합도를 낮추기 위해 개발자가 직접적으로 new 키워드를 사용한
객체 생성을 지양한다. 스프링은 결합도를 낮추기 위해 개발자가 직접 생성하는
객체를 스프링 컨테이너가 연결해준다(IOC/DI)
스프링 컨테이너가 알아서 객체를 연결해주기 위해서는 선수작업이 필요하다.
이 선수작업은 개발자가 직접 해줘야한다.
개발자가 해야할 선수작업은 스프링 컨테이너가 객체를 연결할 때 필요한 객체들을
프로젝트 실행과 동시에 생성해 놓는 작업을 말한다.
개발자가 필요한 객체를 만드는 방법은 자바, XML, ANNOTATION을 사용하는
3가지 방법으로 나눌 수 있다. 이 중에서 우리는 XML, ANNOTATION 두 가지
방법으로 객체를 생성한다.
1. XML 파일에 객체를 생성하는 방법
스프링 프로젝트 시작하자마자 읽는 설정파일(root-context.xml, servlet-context.xml)
에 객체생성 코드를 작성할 수 있다.
root-context.xml파일에는 주로 디비관련 객체를 생성해준다.
servlet-context.cml은 컨트롤러, 페이지 이동과 관련된 객체를 생성해준다.
이 두 파일에 <bean>태그를 사용하여 객체를 생성할 수 있다.
2. annotation으로 객체를 생성하는 방법
annotation으로 객체를 먼저 생성해놓기 위해서는 크게 두가지 작업을 진행해야 한다.
1). 객체를 생성하고자하는 클래스를 먼저 스프링이 읽을 수 있도록 설정
   -> xml파일에 component-scan 태그를 사용
2). 객체를 미리 생성할 클래스위에 어노테이션으로 객체를 생성한다.
   * 객체를 자동으로 생성시켜주는 어노테이션 
       (1)@Component  
       (2)@Controller (3)@Repository   (4)@Service
   * 만들어진 객체를 대입하는 어노테이션(의존성 주입 방법)
       (1)@Autowired : 자료형으로 객체를 구분
       (2)@Resource(name="객체명") : 만들어진 객체명으로 구분























