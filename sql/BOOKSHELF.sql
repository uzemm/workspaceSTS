DROP TABLE BOOK_MEMBER;
DROP TABLE MEMBER_IMAGE;
DROP TABLE MENU;
DROP TABLE SUB_MENU;
DROP TABLE QNA;
DROP TABLE QNA_ANSWER;
DROP TABLE BOARD;
DROP TABLE BOARD_COMMENT;

DROP TABLE NOTICE_IMAGE;
DROP TABLE NOTICE;

DROP TABLE BOOK_CLUB;
DROP TABLE BOOK_CLUB_APPLY;
DROP TABLE BOOK_CLUB_LOGO;
DROP TABLE BOOK_CLUB_BOARD;
DROP TABLE CLUB_BOARD_COMMENT;
DROP TABLE BOOK_CATEGORY;
DROP TABLE BOOK;
DROP TABLE BOOK_IMAGE;
DROP TABLE BOOK_COMMENT;
DROP TABLE BOOK_LIKE;
DROP TABLE BOOK_COMPLIT;
DROP TABLE BOOK_COMMENT;
DROP TABLE BOOK_HOPE;
DROP TABLE BOOK_HOPE_APPLY;
DROP TABLE RESERVE;
DROP TABLE CART;
DROP TABLE BUY;
DROP TABLE ITEM_CATEGORY;
DROP TABLE ITEM;
DROP TABLE ITEM_IMAGE;


--회원 테이블
CREATE TABLE BOOK_MEMBER (
    MEM_ID VARCHAR2(100) PRIMARY KEY
    , MEM_PWD VARCHAR2(100) NOT NULL
    , MEM_NAME VARCHAR2(100) NOT NULL
    , MEM_ADDR VARCHAR2(200) NOT NULL
    , MEM_TELL VARCHAR2(100) NOT NULL
    , MEM_EMAIL VARCHAR2(100) NOT NULL
    , MEM_IMAGE VARCHAR2(200)
    , MEM_GENDER VARCHAR(6) NOT NULL
    , MEM_BIRTH DATE NOT NULL
    , IS_DELETE VARCHAR2(6) DEFAULT 'N'
    , IS_ADMIN VARCHAR2(6) DEFAULT 'N'
    , CLUB_ADMIN VARCHAR2(6) NOT NULL
    , CLUB_CODE VARCHAR2(50)
);

--회원프로필 사진
CREATE TABLE MEMBER_IMAGE (
    MEM_IMG_CODE VARCHAR2(100) PRIMARY KEY
    , MEM_ORIGIN_NAME VARCHAR2(200) NOT NULL
    , MEM_AT_IMG_NAME VARCHAR2(200) NOT NULL
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER
);

--메뉴
CREATE TABLE MENU (
    MENU_CODE VARCHAR2(50) PRIMARY KEY
    , MENU_NAME VARCHAR2(50) NOT NULL UNIQUE
    , MENU_URI VARCHAR2(100) NOT NULL UNIQUE
);

--서브메뉴
CREATE TABLE SUB_MENU(
    SUB_MENU_CODE VARCHAR2(50) PRIMARY KEY
    , SUB_MENU_NAME VARCHAR2(100) NOT NULL UNIQUE
    , SUB_MENU_URI VARCHAR2(100) NOT NULL UNIQUE
    , MENU_CODE VARCHAR2(50) REFERENCES MENU(MENU_CODE)
);

--QNA게시판
CREATE TABLE QNA (
    QNA_NUM VARCHAR2(50) PRIMARY KEY
    , QNA_TITLE VARCHAR2(300) NOT NULL
    , QNA_CONTENT VARCHAR2(1000) NOT NULL
    , QNA_CREATE_DATE DATE DEFAULT SYSDATE
    , QNA_IS_PRIVATE VARCHAR2(6) DEFAULT 'N'
    , QNA_PW VARCHAR2(100)
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--QNA 답변
CREATE TABLE QNA_ANSWER (
    ANSWER_NUM VARCHAR2(50) PRIMARY KEY
    , ANSWER_CONTENT VARCHAR2(1000) NOT NULL
    , QNA_NUM VARCHAR2(50) REFERENCES QNA (QNA_NUM)
        ON DELETE CASCADE
);
    
--자유게시판
CREATE TABLE BOARD (
    BOARD_NUM VARCHAR2(50) PRIMARY KEY
    , BOARD_TITLE VARCHAR2(300) NOT NULL
    , BOARD_CONTENT VARCHAR2(1000) NOT NULL
    , BOARD_READ_CNT NUMBER NOT NULL
    , BOARD_CREATE_DATE DATE DEFAULT SYSDATE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--자유게시판 댓글
CREATE TABLE BOARD_COMMENT (
    COMMENT_NUM VARCHAR2(100) PRIMARY KEY
    , COMMENT_CONTENT VARCHAR2(500) NOT NULL
    , COMMENT_DATE DATE DEFAULT SYSDATE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
    , BOARD_NUM VARCHAR2(50) REFERENCES BOARD (BOARD_NUM)
        ON DELETE CASCADE
);

--공지사항 테이블
CREATE TABLE NOTICE (
    NT_NUM VARCHAR2(50) PRIMARY KEY
    , NT_TITLE VARCHAR2(300) NOT NULL
    , NT_CONTENT VARCHAR2(1000) NOT NULL
    , NT_CREATE_DATE DATE DEFAULT SYSDATE
    , NT_READ_CNT NUMBER NOT NULL
);

--공지사항 이미지 테이블
CREATE TABLE NOTICE_IMAGE (
    NT_IMG_CODE VARCHAR2(100) PRIMARY KEY
    , NT_ORIGIN_NAME VARCHAR2(200) NOT NULL
    , NT_AT_IMG_NAME VARCHAR2(200) NOT NULL
    , NT_NUM VARCHAR2(50) REFERENCES NOTICE (NT_NUM)
         ON DELETE CASCADE
);

--북클럽
CREATE TABLE BOOK_CLUB (
	CLUB_CODE VARCHAR2(50) PRIMARY KEY
	, CLUB_NAME	VARCHAR2(100) NOT NULL
	, CLUB_HEAD_CNT	NUMBER	NOT NULL
	, CLUB_COMPLIT_CNT NUMBER	NOT NULL
	, MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID) 
    ON DELETE CASCADE
	, CLUB_INTRO VARCHAR2(200) 
);

--북클럽 승인
CREATE TABLE BOOK_CLUB_APPLY(
    CLUB_APPLY_CODE VARCHAR2(50) PRIMARY KEY
    , CLUB_CODE VARCHAR2(50) REFERENCES BOOK_CLUB (CLUB_CODE) 
    ON DELETE CASCADE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID) 
    ON DELETE CASCADE
);

--북클럽로고
CREATE TABLE BOOK_CLUB_LOGO(
    CB_LOGO_IMG_CODE VARCHAR2(100)  PRIMARY KEY
    , CB_ORIGIN_NAME VARCHAR2(200) NOT NULL
    , CB_AT_IMG_NAME VARCHAR2(200) NOT NULL
    , CLUB_CODE VARCHAR2(50) REFERENCES BOOK_CLUB (CLUB_CODE) 
    ON DELETE CASCADE
);

--북클럽게시판
CREATE TABLE BOOK_CLUB_BOARD(
    CB_BOARD_NUM VARCHAR2(50) PRIMARY KEY
    , CB_BOARD_TITLE VARCHAR2(500) NOT NULL
    , CB_BOARD_CONTENT VARCHAR2(1000) NOT NULL
    , CB_BOARD_DATE DATE DEFAULT SYSDATE 
    , MEM_ID VARCHAR2(50) REFERENCES BOOK_MEMBER (MEM_ID) 
    ON DELETE CASCADE
    , CLUB_CODE VARCHAR2(50) REFERENCES BOOK_CLUB (CLUB_CODE) 
    ON DELETE CASCADE
);

--북클럽게시판 댓글
CREATE TABLE BOOK_CLUB_BOARD_COMMENT(
    CB_CMT_NUM VARCHAR2(100) PRIMARY KEY
    , CB_CMT_CONTENT VARCHAR2(500) NOT NULL
    , CB_CMT_DATE DATE DEFAULT SYSDATE 
    , MEM_ID VARCHAR2(50) REFERENCES BOOK_MEMBER (MEM_ID) 
    ON DELETE CASCADE
    , CB_BOARD_NUM VARCHAR2(50) REFERENCES BOOK_CLUB_BOARD (CB_BOARD_NUM) 
    ON DELETE CASCADE
);

--도서 카테고리 테이블
CREATE TABLE BOOK_CATEGORY (
    CATE_CODE VARCHAR2(50) PRIMARY KEY
    , CATE_NAME VARCHAR2(100) NOT NULL
);

--도서 테이블
CREATE TABLE BOOK (
    BOOK_CODE VARCHAR2(50) PRIMARY KEY
    , BOOK_NAME VARCHAR2(100) NOT NULL
    , BOOK_WRITER VARCHAR2(100) NOT NULL
    , BOOK_CONTENT VARCHAR2(500) NOT NULL
    , PUBLISHER VARCHAR2(100) NOT NULL
    , CATE_CODE VARCHAR2(50) REFERENCES BOOK_CATEGORY (CATE_CODE)
        ON DELETE CASCADE
    , RECEIVE_DATE DATE DEFAULT SYSDATE
    , BOOK_STOCK NUMBER NOT NULL
    , IS_NOMI VARCHAR2(100) NOT NULL
    , RESERVE_CNT NUMBER NOT NULL
    , IS_PLACE VARCHAR2(10) DEFAULT 'Y'
    , MADE_DATE DATE NOT NULL
);

--도서이미지 테이블
CREATE TABLE BOOK_IMAGE (
    BK_IMG_CODE VARCHAR2(100) PRIMARY KEY
    , BK_ORIGIN_NAME VARCHAR2(200) NOT NULL
    , BK_AT_IMG_NAME VARCHAR2(200) NOT NULL
    , IS_MAIN VARCHAR2(10) DEFAULT 'Y'
    , BOOK_CODE VARCHAR2(50) REFERENCES BOOK (BOOK_CODE)
        ON DELETE CASCADE
);

--도서 리뷰
CREATE TABLE BOOK_COMMENT (
    REVIEW_NUM VARCHAR2(100) PRIMARY KEY
    , REVIEW_CONTENT VARCHAR2(1000) NOT NULL
    , BOOK_CODE VARCHAR2(50) REFERENCES BOOK (BOOK_CODE)
        ON DELETE CASCADE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--도서 찜
CREATE TABLE BOOK_LIKE (
    LIKE_CODE VARCHAR2(100) PRIMARY KEY
    , IS_LIKE VARCHAR2(10) DEFAULT 'N'
    , LIKE_DATE DATE DEFAULT SYSDATE
    , BOOK_CODE VARCHAR2(50) REFERENCES BOOK (BOOK_CODE)
        ON DELETE CASCADE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--완독 도서
CREATE TABLE BOOK_COMPLIT (
    COMPLIT_CODE VARCHAR2(100) PRIMARY KEY
    , COMPLIT_DATE DATE DEFAULT SYSDATE
    , BOOK_CODE VARCHAR2(50) REFERENCES BOOK (BOOK_CODE)
        ON DELETE CASCADE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--희망도서
CREATE TABLE BOOK_HOPE (
    HOPE_CODE VARCHAR2(50) PRIMARY KEY
    , HOPE_NAME VARCHAR2(100) NOT NULL
    , HOPE_WRITER VARCHAR2(100) NOT NULL
    , HOPE_PUBLISHER VARCHAR2(100) NOT NULL
    , HOPE_DATE DATE DEFAULT SYSDATE
    , IS_HOPE VARCHAR2(10) DEFAULT 'N'
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);

--희망도서승인
CREATE TABLE BOOK_HOPE_APPLY (
    HOPE_APPLY_CODE VARCHAR2(50) PRIMARY KEY
    , HOPE_STATUS NUMBER DEFAULT 0
    , HOPE_APPLY_DATE DATE DEFAULT SYSDATE
    , HOPE_CODE VARCHAR2(50) REFERENCES BOOK_HOPE (HOPE_CODE)
        ON DELETE CASCADE
);

--예약
CREATE TABLE RESERVE (
    RESERVE_CODE VARCHAR2(100) PRIMARY KEY
    , APPLI_DATE DATE DEFAULT SYSDATE
    , IS_RESERVE VARCHAR2(10) DEFAULT 'N'
    , RESERVE_DATE DATE NOT NULL
    , RETURN_DATE DATE NOT NULL
    , BOOK_CODE VARCHAR2(50) REFERENCES BOOK (BOOK_CODE)
        ON DELETE CASCADE
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
        ON DELETE CASCADE
);


--굿즈 카테고리
CREATE TABLE ITEM_CATEGORY (
    CATE_CODE VARCHAR2(50) CONSTRAINT PK_ITEM_CATEGORY PRIMARY KEY
    , CATE_NAME VARCHAR(100) NOT NULL
);

--굿즈
CREATE TABLE ITEM(
    ITEM_CODE VARCHAR2(100) PRIMARY KEY
    , ITEM_NAME VARCHAR2(100) NOT NULL UNIQUE
    , ITEM_PRICE NUMBER
    , ITEM_DETAIL VARCHAR2(1000)
    , ITEM_STOCK NUMBER DEFAULT 10
    , CATE_CODE VARCHAR2(50) REFERENCES ITEM_CATEGORY (CATE_CODE)
       ON DELETE CASCADE 
);

--굿즈이미지
CREATE TABLE ITEM_IMAGE (
    ITEM_IMG_CODE VARCHAR2(50) PRIMARY KEY 
    , ITEM_ORIGIN_NAME VARCHAR2(200) 
    , ITEM_AT_IMG_NAME VARCHAR2(200) 
    , IS_MAIN VARCHAR2(10)
    , ITEM_CODE VARCHAR2(100) REFERENCES ITEM (ITEM_CODE)
    ON DELETE CASCADE
);

--구매
CREATE TABLE BUY (
    BUY_NUM NUMBER PRIMARY KEY
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID)
    , ITEM_CODE VARCHAR2(100) REFERENCES ITEM (ITEM_CODE)
    , ITEM_CNT NUMBER
    , BUY_PRICE NUMBER
    , BUY_DATE DATE DEFAULT SYSDATE
    , ORDER_NUM VARCHAR2(100)
    , MEM_ADDR VARCHAR2(200) REFERENCES BOOK_MEMBER (MEM_ADDR)
    , MEM_TELL VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_TELL)
    , PAY_CODE VARCHAR2(50)
);

--장바구니
CREATE TABLE CART (
    CART_NUM NUMBER PRIMARY KEY
    , ITEM_CODE VARCHAR2(100) REFERENCES ITEM (ITEM_CODE) NOT NULL
    , MEM_ID VARCHAR2(100) REFERENCES BOOK_MEMBER (MEM_ID) NOT NULL
    , ITEM_CNT NUMBER NOT NULL
    , CREATE_DATE DATE DEFAULT SYSDATE    
); 

--장바구니뷰
CREATE OR REPLACE VIEW CART_VIEW
AS
SELECT CART.CART_NUM
    , CART.ITEM_CODE
    , ITEM.ITEM_NAME
    , ITEM.ITEM_PRICE
    , ITEM.ITEM_PRICE * CART.ITEM_CNT AS TOTAL_PRICE
    , CART.ITEM_CNT
    , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
    , CART.MEM_ID
    , IMG.ATTACHED_IMG_NAME
FROM CART CART, ITEM ITEM, ITEM_IMAGE IMG
WHERE CART.ITEM_CODE = ITEM.ITEM_CODE
AND CART.ITEM_CODE = IMG.ITEM_CODE
AND IMG.IS_MAIN = 'Y';